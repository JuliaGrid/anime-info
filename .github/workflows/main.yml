name: Frontend CI/CD
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install
      - run: npm run build

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install
      - run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install
      - run: npm run typecheck

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install
      - run: npm test

  chromatic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install
      - name: Run Chromatic
        id: chromatic
        run: |
          set +e
          OUTPUT=$(npm run chromatic 2>&1)
          EXIT_CODE=$?

          echo "$OUTPUT" > chromatic.log

          # –ò—â–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –±–∏–ª–¥ Chromatic
          BUILD_URL=$(echo "$OUTPUT" | grep -Eo 'https://www.chromatic.com/build\?appId[^ ]+')

          echo "build_url=$BUILD_URL" >> $GITHUB_OUTPUT

          exit $EXIT_CODE
        env:
          CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
      - name: Chromatic failed message
        if: failure()
        run: |
          echo "::error::‚ùå Chromatic –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏!"
          if [ -n "${{ steps.chromatic.outputs.build_url }}" ]; then
            echo "üìÑ –û—Ç—á—ë—Ç Chromatic: ${{ steps.chromatic.outputs.build_url }}"
          else
            echo "‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –≤—ã–≤–æ–¥–µ."
          fi
          echo ""
          echo "–ß—Ç–æ –¥–µ–ª–∞—Ç—å:"
          echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ –æ—Ç—á—ë—Ç –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è."
          echo "2. –ï—Å–ª–∏ –æ–Ω–∏ –æ–∂–∏–¥–∞–µ–º—ã ‚Äî –æ–±–Ω–æ–≤–∏—Ç–µ —Å–Ω–∞–ø—à–æ—Ç—ã."
          echo "3. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞."

  deploy:
    runs-on: ubuntu-latest
    needs: [build, lint, typecheck, unit-tests, chromatic]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm ci
      - run: npm run build
      - run: npm run deploy
